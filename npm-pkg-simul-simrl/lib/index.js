const e=e=>{const{grossIncome:o,irsWithholdingTax:t,surchargeWithholding:r,mandatoryContributionsToSecSocial:n}=e,a=o-t-r-n;return Math.round(100*(a<0?0:a))/100},o=e=>{const{calculatedProfit:o,calculatedLoss:t,taxIncidence:r}=e;return 0!==o?Math.round(100*(o-r))/100:t?Math.round(-1*t*100)/100:0},t=e=>{const{saleOfGoodsAndProductsTotal:o,provisionOfHotelAndSimilarServicesCateringAndBeverageTotal:t,provisionOfCateringAndBeverageActivitiesServicesTotal:r,provisionOfHotelServicesAndSimilarActivitiesTotal:n,provisionOfServRelatedToTheExploOfLocalAccEstablishmentsTotal:a,incomeFromProActivitiesSpecifArticle151OfTheCIRSTotal:i,incomeFromServicesRenderedNotForeseenInThePreviousFieldsTotal:s,intellPropertyNotCoveByArtic58OfTheEBFIndOrInforPropertyTotal:c,intellPropertyIncoCoveredByArtic58OfTheEBFNonExemptPartTotal:l,positiveBalanOfCapGainsAndLossesAndOtherEquityIncrementsTotal:d,incomeFromFinancialActivitiesCAECodesStartWith6465or66Total:u,servicProvidedByMembToProSocOfTheFiscalTransparencRegimeTotal:m,positiveResultOfPropertyIncomeTotal:h,propertyIncomeAttributableToCatBIncomeGeneratingActivityTotal:g,operatingSubsidiesTotal:I,otherSubsidiesTotal:T,categoryBIncomeNotIncludedInPreviousFieldsTotal:p,salesProductsOtherThanThoseIncludField7Total:P,servicesRenderedTotal:v,incomeFromCapitalAndRealEstateTotal:S,agriYieldsSilvLivstckPositiveResultOfPropertyIncomeTotal:x,operatingSubsidiesRelatedToSalesTotal:A,agriYieldsSilvLivstckOtherSubsidiesTotal:b,incomeFromSalesMultiannualTotal:y,categoryBIncomeTotal:O,otherIncomeTotal:f}=e;return Math.round(100*(o+t+r+n+a+i+s+c+l+d+u+m+h+g+I+T+p+P+v+S+x+A+b+y+O+f))/100},r=e=>{const{totalGrossIncome:o,charges:t,taxIncidence:r}=e;return Math.round(100*(o-t-r))/100},n=e=>{const{earnedIncome:o,sublease:t}=e;return Math.round(100*(o.grossIncome-o.withholdingTax-o.supportedAndPaidExpenses+(t.incomeReceivedByTheSublessor-t.irsWithholdingTax-t.rentPaidToLandlord)))/100},a=e=>{const{exemptIncomeSubjectToAggregation:o,incomeFromIntellectualPropertyPartiallyExempted:t}=e;return Math.round(100*(o.grossIncome-o.irsWithholdingTax+t.income))/100},i=e=>{const{incomeFromDependentWork:o,pensionIncome:t,businessAndProfessionalIncome:r,propertyIncome:n,capitalIncome:a}=e;return Math.round(100*(o.grossIncome-o.taxPaidAbroad-o.withholding-o.surchargeWithholding-o.contributionsToSocialProtectionSchemes+(t.grossIncome-t.taxPaidAbroad-t.contributionsToSocialProtectionSchemes)+(r.grossIncome-r.taxPaidAbroad-r.contributionsToSocialProtectionSchemes-r.withholding)+(n.netIncome-n.taxPaidAbroad)+(a.grossIncome-a.eithholdingTaxInPortugal)))/100},s=e=>{const{incomeObtainedInPortugueseTerritoryByEntitiesBasedInPortugal:o,incomeObtainedInPortugueseTerritoryByEntitiesWithoutHeadquartersInPortugal:t,rateNetIncomeBasedInPortugal:r,rateNetIncomeNotBasedInPortugal:n}=e,a=o.grossIncomeYear1<o.grossIncomeYear2?o.grossIncomeYear1*r-o.withholdingTaxInPortugalYear1:o.grossIncomeYear2*r-o.withholdingTaxInPortugalYear2,i=t.grossIncomeYear1<t.grossIncomeYear2?t.grossIncomeYear1*n-t.withholdingTaxInPortugalYear1:t.grossIncomeYear2*n-t.withholdingTaxInPortugalYear2;return Math.round(100*(a+i))/100},c=e=>{const{incomeNotExemptFromTax:o,taxFreeIncome:t,grossIncomeNetTaxRate:r}=e;return Math.round(100*(o.grossIncome-o.taxPaidAbroad-o.taxWithheldAbroad-o.chargesForSocialSecurityorEquivalent+t.grossIncome*r))/100},l=e=>{const{otherNetIncome:o}=e;return Math.round(100*o)/100},d=e=>{const{receipt1Value:o,receipt2Value:t,receipt3Value:r,valueOfRegularReceipts:n}=e,a=(o+t+r)/3,i=1-a/o,s=1-a/t,c=1-a/r;return i>n||i<-n||s>n||s<-n||c>n||c<-n},u=e=>{const{receipt1:o,receipt2:t,receipt3:r,receipt4:n,receipt5:a,receipt6:i,isIrregular:s,propertyIncomeTax:c}=e;return s?c?Math.round((o+t+r+n+a+i)*c/6*100)/100:Math.round((o+t+r+n+a+i)/6*100)/100:s?0:c?Math.round((o+t+r)*c/3*100)/100:Math.round((o+t+r)/3*100)/100};export{s as calculateCapitalIncome,a as calculateExemptIncomeOrIntellectualProperty,c as calculateIncomeEarnedAbroadForNonResidents,i as calculateIncomeEarnedAbroadForResidents,d as calculateIsRegularOrIrregular,e as calculateNetIncomeDependentsAndPensions,o as calculateNetIncomeIndependentWithOrganizedAccounting,r as calculateNetIncomeIndependentWithoutOrganizedAccounting,t as calculateNetIncomeIndependentWithoutOrganizedAccountingTotal,n as calculateNetIncomePropertyIncome,l as calculateOtherIncome,u as calculateReceiptsAverageTotal};
